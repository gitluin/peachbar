# ------------------------------------------
# Graphical options
# ------------------------------------------

# ------------------------------------------
# Audio
AUDIOBG=$BARBG
MUTEBG="#C64756"

# ------------------------------------------
# Battery
CHRBG="#96BB7C"
LOWBG="#EEB76B"
PANICBG="#C64756"

# ------------------------------------------
# Bluetooth
BTUPBG="#A7C5EB"
BTDOWNBG="#C64756"

# ------------------------------------------
# Brightness
BRIGHTBG="#FAD586"

# ------------------------------------------
# Network
NTDOWNBG="#C64756"
NTUPBG="#96BB7C"

# ------------------------------------------
# Sara info options
#TAGS="I:II:III:IV:V:VI:VII:VIII:IX"
TAGS="\ue836:\ue836:\ue836:\ue836:\ue836:\ue836:\ue836:\ue836:\ue836"
OTAGS="\ue837:\ue837:\ue837:\ue837:\ue837:\ue837:\ue837:\ue837:\ue837"
STAGS="\ue3a6:\ue3a6:\ue3a6:\ue3a6:\ue3a6:\ue3a6:\ue3a6:\ue3a6:\ue3a6"
TAGDELIMF="  "
TAGDELIMB="  "
LTDELIMF="  "
LTDELIMB="  "

# TODO: default to something

OCCFG="${SARAFG}"
#OCCBG="#${SARAALPHA}486063"
OCCBG="${SARABG}"

SELFG="${SARAFG}"
#SELBG="#${SARAALPHA}405D61"
SELBG="${SARABG}"


# ------------------------------------------
# Modules
# ------------------------------------------

# Define necessary files for your modules
BATSTATFILE="/sys/class/power_supply/BAT0/status"
BATCAPFILE="/sys/class/power_supply/BAT0/capacity"
NETFILE="/sys/class/net/wlp2s0/operstate"

Audio() {
	STATE="$(amixer get Master | awk -F"[][]" '/Left/ { print $4 }')"
	# NO quotes - drop whitespace
	VOL="$(amixer get Master | grep 'Front Left:' | \
		sed 's/.*[0-9] \[/[/' | \
		sed 's/\] .*/]/' | \
		sed 's/\[//' | \
		sed 's/\]//')"

	TO_OUT=""

	test $STATE = "off" && TO_OUT="%{B$MUTEBG} \ue04f %{B$MODULESBG} $VOL  " || \
		TO_OUT=" \ue050  $VOL  "

	echo -e "%{A3:rofi-audio-switch.sh:}$TO_OUT%{A}"
}

Battery() {
	BATSTAT="$(cat $BATSTATFILE)"
	BAT="$(cat $BATCAPFILE)"

	test $BAT -gt 100 && BAT=100

	BATSYM="\ue1a4"
	(test "$BATSTAT" = "Charging" || test "$BATSTAT" = "Unknown") || \
		test "$BATSTAT" = "Full" && BATSYM="\ue1a3"

	if test "$BATSYM" = "\ue1a4"; then
		if test $BAT -le 10; then
			echo -e "%{B$PANICBG} \ue19c %{B$MODULESBG} $BAT%  "
		elif test $BAT -le 20; then
			echo -e "%{B$LOWBG} $BATSYM %{B$MODULESBG} $BAT%  "
		else
			echo -e "$BATSYM $BAT%  "
		fi
	else
		echo -e "%{B$CHRBG} $BATSYM %{B$MODULESBG} $BAT%  "
	fi
}

Bluetooth() {
	STATUS="$(bluetoothctl show | grep -A 5 'Controller' | grep 'Powered' | sed 's/Powered: //')"

	TO_OUT=""

	test $STATUS = "yes" && TO_OUT="%{B$BTUPBG} \ue1a7 %{B$MODULESBG}  " || \
		TO_OUT="%{B$BTDOWNBG} \ue1a9 %{B$MODULESBG}  "

	echo -e "%{A3:bt-switch.sh:}$TO_OUT%{A}"
}

Brightness() {
	BRIGHT="$(light -G | sed 's/\..*//g')"

	echo -e "%{B$BRIGHTBG} \ue3aa %{B$MODULESBG} $BRIGHT%  "
}

Network() {
	NETSTATE="$(cat $NETFILE)"

	if [ $NETSTATE = "up" ]; then
		# No double quotes to ignore newline
		NETNAME="$(sudo wpa_cli -i wlp2s0 status | grep ssid)"
		NETNAME=$(echo $NETNAME | sed 's/bssid.*ssid/ssid/g' | sed 's/ssid=//g')
		NETNAME="%{B$NTUPBG} \ue63e %{B$MODULESBG} $NETNAME  "

	else
		NETNAME="%{B$NTDOWNBG} \ue640 %{B$MODULESBG} down  "
	fi

	echo -e "$NETNAME"
}

Time() {
	DTIME="$(date +'%m/%d/%y %H:%M')"
	echo -e " \ue192 $DTIME  "
}

# TODO: option for all tags or just occupied
Sara() {
	LTBUTTONSTART="%{A:sarasock 'setlayout tile':}%{A3:sarasock 'setlayout monocle':}"
	LTBUTTONEND="%{A}%{A}"
	TAGCOLOREND="%{B$SARABG}%{F$SARAFG}"

	MONNUM="$1"
	MONLINE="$(cat /tmp/sara-Mon$MONNUM.fifo)"

	# MonNum:DeskState:LayoutSymbol
	# 0:SONNNNNNN:[]= -> SONNNNNNN:[]=
	MONLINE="$(echo $MONLINE | cut -d':' -f2-3)"
	DESKSTATE="$(echo $MONLINE | cut -d':' -f1)"
	LAYOUTSYM="$(echo $MONLINE | cut -d':' -f2)"

	# If TAGS is too short, extend it
	NUMDESK="$(echo -n "$DESKSTATE" | wc -m)"
	while test $(echo -n "$TAGS" | wc -m) -lt $NUMDESK; do
		TO_ADD="$(echo "$TAGS" | cut -d':' -f1)"
		TAGS="$TAGS${TO_ADD}"
	done

	# In case user wants to be less specific with symbols
	test -z "$NTAGS" && NTAGS="$TAGS"
	test -z "$STAGS" && SELTAGS="$TAGS"
	test -z "$OTAGS" && OCCTAGS="$TAGS"
	test -z "$TAGDELIMF" && TAGDELIMF="   "
	test -z "$TAGDELIMB" && TAGDELIMB="$TAGDELIMF"
	test -z "$LTDELIMF" && LTDELIMF="  "
	test -z "$LTDELIMB" && LTDELIMB="$LTDELIMF"

	# Generate call to insert correct tags by using line numbers
	TAGSTR="$(echo $DESKSTATE | sed 's/\(.\)/\1\n/g' | cat -n | \
		sed "s/^     \([0-9]\).\(.*\)/{{%{A:sarasock \'view \1\':}%{A3:sarasock \'toggleview \1\':}${TAGDELIMF}$(echo $\2TAGS \| cut -d":" -f\1)${TAGDELIMB}%{A}%{A}}}/g")"

	TAGSTR="$(echo "$TAGSTR" | sed 's/{{\([^}}]*STAGS[^}}]*\)}}/%{F$SELFG}%{B$SELBG}\1$TAGCOLOREND/g')"
	TAGSTR="$(echo "$TAGSTR" | sed 's/{{\([^}}]*OTAGS[^}}]*\)}}/%{F$OCCFG}%{B$OCCBG}\1$TAGCOLOREND/g')"
	TAGSTR="$(echo "$TAGSTR" | sed 's/{{\([^}}]*NTAGS[^}}]*\)}}/%{F$SARAFG}%{B$SARABG}\1$TAGCOLOREND/g')"

	TAGSTR="${TAGSTR}${LTBUTTONSTART}${LTDELIMF}$LAYOUTSYM${LTDELIMB}${LTBUTTONEND}%{B$BARBG}%{F$BARFG}"
	# Remove newlines
	TAGSTR="$(echo $TAGSTR | sed 's/}} {{//g' | sed 's/{{//g' | sed 's/}}//g')"

	echo -e "${TAGSTR}"
}
